# Create a library from the submodule's source files
add_library(graphics
    src/CameraManager.cpp
    src/GraphicsContext.cpp
    src/GraphicsManager.cpp
    src/Polyline2D.cpp 
    src/Polyline3D.cpp
    src/Polygon2D.cpp
    src/LayerManager.cpp
    src/BuffersManager.cpp
    src/Device.cpp
    #src/SharedrManager.cpp
    #src/Texture2D.cpp
    #privates
    src/TriangleBuffer2D.cpp
    src/PointBuffer2D.cpp
    src/PointBuffer3D.cpp
    src/LineBuffer2D.cpp
    src/LineBuffer3D.cpp
    src/PolygonBuffer2D.cpp
    src/Layer.cpp
    src/Pixel.cpp


)

# raylib
add_subdirectory(gfx)


# Link raylib to the graphics library
target_link_libraries(graphics PUBLIC raylib)

# Specify include directories for the submodule
target_include_directories(graphics PUBLIC
    ${CMAKE_CURRENT_SOURCE_DIR}/include
    ${raylib_SOURCE_DIR}/include
)

target_include_directories(graphics PUBLIC
    ${CMAKE_CURRENT_SOURCE_DIR}/include/private
)

set_target_properties(graphics PROPERTIES FOLDER "modules")


# Specify the directory containing your shaders
set(SHADER_DIR ${CMAKE_CURRENT_SOURCE_DIR}/shaders)

# Collect all shader files
file(GLOB SHADER_FILES ${SHADER_DIR}/*)

# Specify the directory containing your shaders
set(SHADER_DIR ${CMAKE_CURRENT_SOURCE_DIR}/shaders)

# Collect all shader files
file(GLOB SHADER_FILES ${SHADER_DIR}/*)

# Ensure the resources/shaders directory is created in the Debug directory
add_custom_command(
    TARGET graphics POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E make_directory
        ../../Debug/resources/shaders
    COMMENT "Creating resources/shaders directory in Debug directory"
)

# Collect all shader files
file(GLOB SHADER_FILES ${CMAKE_CURRENT_SOURCE_DIR}/shaders/*)

# Copy shader files to the resources/shaders folder after building the graphics target
foreach(SHADER_FILE ${SHADER_FILES})
    get_filename_component(SHADER_NAME ${SHADER_FILE} NAME)

    # Debug: Print the name and source path of the shader
    message(STATUS "Copying shader file: ${SHADER_FILE} as ${SHADER_NAME}")

    add_custom_command(
        TARGET graphics POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy_if_different
            ${SHADER_FILE}
            $<TARGET_FILE_DIR:graphics>../../../../Debug/resources/shaders/${SHADER_NAME}
        COMMENT "Copying shader: ${SHADER_NAME} to $<TARGET_FILE_DIR:graphics>/resources/shaders"
    )
endforeach()
